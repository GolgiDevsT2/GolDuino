/* IS_AUTOGENERATED_SO_ALLOW_AUTODELETE=YES */
/* The previous line is to allow auto deletion */

#ifndef __GolgiGen_H__
#define __GolgiGen_H__

#include "libgolgi.h"


class PinSetting{
public:
    PinSetting(void);
    PinSetting(bool isSetDefault);
    PinSetting *dupe(void);
    virtual ~PinSetting(void);

    bool isCorrupt(void);

    bool pinIsSet(void);
    int32_t getPin(void);
    void setPin(int32_t val);

    bool valIsSet(void);
    int32_t getVal(void);
    void setVal(int32_t val);

    bool strIsSet(void);
    const char *getStr(void);
    void setStr(const char *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _pin;
    bool _pinIsSet;

    int32_t _val;
    bool _valIsSet;

    const char *_str;
    bool _strIsSet;
};


class setPinArg{
public:
    setPinArg(void);
    setPinArg(bool isSetDefault);
    setPinArg *dupe(void);
    virtual ~setPinArg(void);

    bool isCorrupt(void);

    bool pinSettingIsSet(void);
    PinSetting *getPinSetting(void);
    void setPinSetting(PinSetting *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    PinSetting *_pinSetting;
    bool _pinSettingIsSet;
};


class IOState{
public:
    IOState(void);
    IOState(bool isSetDefault);
    IOState *dupe(void);
    virtual ~IOState(void);

    bool isCorrupt(void);

    bool ledStateIsSet(void);
    int32_t getLedState(void);
    void setLedState(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _ledState;
    bool _ledStateIsSet;
};


class PotValue{
public:
    PotValue(void);
    PotValue(bool isSetDefault);
    PotValue *dupe(void);
    virtual ~PotValue(void);

    bool isCorrupt(void);

    bool vIsSet(void);
    int32_t getV(void);
    void setV(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _v;
    bool _vIsSet;
};


class GolDuino_setPin_reqArg{
public:
    GolDuino_setPin_reqArg(void);
    GolDuino_setPin_reqArg(bool isSetDefault);
    GolDuino_setPin_reqArg *dupe(void);
    virtual ~GolDuino_setPin_reqArg(void);

    bool isCorrupt(void);

    bool settingIsSet(void);
    PinSetting *getSetting(void);
    void setSetting(PinSetting *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    PinSetting *_setting;
    bool _settingIsSet;
};


class GolDuino_setPin_rspArg{
public:
    GolDuino_setPin_rspArg(void);
    GolDuino_setPin_rspArg(bool isSetDefault);
    GolDuino_setPin_rspArg *dupe(void);
    virtual ~GolDuino_setPin_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool resultIsSet(void);
    PinSetting *getResult(void);
    void setResult(PinSetting *val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    PinSetting *_result;
    bool _resultIsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};


class GolDuino_setIO_reqArg{
public:
    GolDuino_setIO_reqArg(void);
    GolDuino_setIO_reqArg(bool isSetDefault);
    GolDuino_setIO_reqArg *dupe(void);
    virtual ~GolDuino_setIO_reqArg(void);

    bool isCorrupt(void);

    bool ioStateIsSet(void);
    IOState *getIoState(void);
    void setIoState(IOState *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    IOState *_ioState;
    bool _ioStateIsSet;
};


class GolDuino_setIO_rspArg{
public:
    GolDuino_setIO_rspArg(void);
    GolDuino_setIO_rspArg(bool isSetDefault);
    GolDuino_setIO_rspArg *dupe(void);
    virtual ~GolDuino_setIO_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};


class GolDuino_buttonPressed_reqArg{
public:
    GolDuino_buttonPressed_reqArg(void);
    GolDuino_buttonPressed_reqArg(bool isSetDefault);
    GolDuino_buttonPressed_reqArg *dupe(void);
    virtual ~GolDuino_buttonPressed_reqArg(void);

    bool isCorrupt(void);

    bool tIsSet(void);
    int32_t getT(void);
    void setT(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _t;
    bool _tIsSet;
};


class GolDuino_buttonPressed_rspArg{
public:
    GolDuino_buttonPressed_rspArg(void);
    GolDuino_buttonPressed_rspArg(bool isSetDefault);
    GolDuino_buttonPressed_rspArg *dupe(void);
    virtual ~GolDuino_buttonPressed_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};


class GolDuino_buttonReleased_reqArg{
public:
    GolDuino_buttonReleased_reqArg(void);
    GolDuino_buttonReleased_reqArg(bool isSetDefault);
    GolDuino_buttonReleased_reqArg *dupe(void);
    virtual ~GolDuino_buttonReleased_reqArg(void);

    bool isCorrupt(void);

    bool tIsSet(void);
    int32_t getT(void);
    void setT(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _t;
    bool _tIsSet;
};


class GolDuino_buttonReleased_rspArg{
public:
    GolDuino_buttonReleased_rspArg(void);
    GolDuino_buttonReleased_rspArg(bool isSetDefault);
    GolDuino_buttonReleased_rspArg *dupe(void);
    virtual ~GolDuino_buttonReleased_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};


class GolDuino_setPotValue_reqArg{
public:
    GolDuino_setPotValue_reqArg(void);
    GolDuino_setPotValue_reqArg(bool isSetDefault);
    GolDuino_setPotValue_reqArg *dupe(void);
    virtual ~GolDuino_setPotValue_reqArg(void);

    bool isCorrupt(void);

    bool vIsSet(void);
    int32_t getV(void);
    void setV(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _v;
    bool _vIsSet;
};


class GolDuino_setPotValue_rspArg{
public:
    GolDuino_setPotValue_rspArg(void);
    GolDuino_setPotValue_rspArg(bool isSetDefault);
    GolDuino_setPotValue_rspArg *dupe(void);
    virtual ~GolDuino_setPotValue_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};


class GolDuino_getPotValue_reqArg{
public:
    GolDuino_getPotValue_reqArg(void);
    GolDuino_getPotValue_reqArg(bool isSetDefault);
    GolDuino_getPotValue_reqArg *dupe(void);
    virtual ~GolDuino_getPotValue_reqArg(void);

    bool isCorrupt(void);

    bool pookyIsSet(void);
    int32_t getPooky(void);
    void setPooky(int32_t val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _pooky;
    bool _pookyIsSet;
};


class GolDuino_getPotValue_rspArg{
public:
    GolDuino_getPotValue_rspArg(void);
    GolDuino_getPotValue_rspArg(bool isSetDefault);
    GolDuino_getPotValue_rspArg *dupe(void);
    virtual ~GolDuino_getPotValue_rspArg(void);

    bool isCorrupt(void);

    bool internalSuccess_IsSet(void);
    int32_t getInternalSuccess_(void);
    void setInternalSuccess_(int32_t val);

    bool resultIsSet(void);
    PotValue *getResult(void);
    void setResult(PotValue *val);

    bool golgiExceptionIsSet(void);
    GolgiException *getGolgiException(void);
    void setGolgiException(GolgiException *val);

    bool decodeFromPayload(const char *payload);
    const char *encode(void);
    const char *encodeWithPrefix(const char *prefix);

private:
    void initialise(bool isSetDefault);
    bool _corrupt;

    int32_t _internalSuccess_;
    bool _internalSuccess_IsSet;

    PotValue *_result;
    bool _resultIsSet;

    GolgiException *_golgiException;
    bool _golgiExceptionIsSet;
};

#if 1
class GolDuinoSetPinResultSender{
private:
    void sendResult(GolDuino_setPin_rspArg *rspArg);
public:
    GolDuinoSetPinResultSender(GolgiResultSender *golgiResultSender);
    void success(PinSetting *arg);
    void failWithGolgiException(GolgiException *golgiException);
    const char *getSender(void);
    virtual ~GolDuinoSetPinResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoSetPinRequestReceiver{
public:
    virtual void inboundSetPin(GolDuinoSetPinResultSender *resultSender, GolDuino_setPin_reqArg *arg) {};
};

class GolDuinoInternalSetPinRequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalSetPinRequestReceiver(GolDuinoSetPinRequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalSetPinRequestReceiver();
private:
    GolDuinoSetPinRequestReceiver *reqReceiver;
};

void GolDuinoRegisterSetPinRequestReceiver(GolDuinoSetPinRequestReceiver *requestReceiver);

#endif
    void failWithGolgiException(GolgiException *golgiException);
class GolDuinoSetPinResultReceiver{
public:
    virtual void success(PinSetting *arg) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoSetPinResultReceiver() {};
};

extern void GolDuinoSetPin_sendTo(GolDuinoSetPinResultReceiver *resReceiver, const char *dst, GolDuino_setPin_reqArg *arg);
#if 1
class GolDuinoSetIOResultSender{
private:
    void sendResult(GolDuino_setIO_rspArg *rspArg);
public:
    GolDuinoSetIOResultSender(GolgiResultSender *golgiResultSender);
    void success(void);
    const char *getSender(void);
    virtual ~GolDuinoSetIOResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoSetIORequestReceiver{
public:
    virtual void inboundSetIO(GolDuinoSetIOResultSender *resultSender, GolDuino_setIO_reqArg *arg) {};
};

class GolDuinoInternalSetIORequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalSetIORequestReceiver(GolDuinoSetIORequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalSetIORequestReceiver();
private:
    GolDuinoSetIORequestReceiver *reqReceiver;
};

void GolDuinoRegisterSetIORequestReceiver(GolDuinoSetIORequestReceiver *requestReceiver);

#endif
class GolDuinoSetIOResultReceiver{
public:
    virtual void success(void) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoSetIOResultReceiver() {};
};

extern void GolDuinoSetIO_sendTo(GolDuinoSetIOResultReceiver *resReceiver, const char *dst, GolDuino_setIO_reqArg *arg);
#if 1
class GolDuinoButtonPressedResultSender{
private:
    void sendResult(GolDuino_buttonPressed_rspArg *rspArg);
public:
    GolDuinoButtonPressedResultSender(GolgiResultSender *golgiResultSender);
    void success(void);
    const char *getSender(void);
    virtual ~GolDuinoButtonPressedResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoButtonPressedRequestReceiver{
public:
    virtual void inboundButtonPressed(GolDuinoButtonPressedResultSender *resultSender, GolDuino_buttonPressed_reqArg *arg) {};
};

class GolDuinoInternalButtonPressedRequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalButtonPressedRequestReceiver(GolDuinoButtonPressedRequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalButtonPressedRequestReceiver();
private:
    GolDuinoButtonPressedRequestReceiver *reqReceiver;
};

void GolDuinoRegisterButtonPressedRequestReceiver(GolDuinoButtonPressedRequestReceiver *requestReceiver);

#endif
class GolDuinoButtonPressedResultReceiver{
public:
    virtual void success(void) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoButtonPressedResultReceiver() {};
};

extern void GolDuinoButtonPressed_sendTo(GolDuinoButtonPressedResultReceiver *resReceiver, const char *dst, GolDuino_buttonPressed_reqArg *arg);
#if 1
class GolDuinoButtonReleasedResultSender{
private:
    void sendResult(GolDuino_buttonReleased_rspArg *rspArg);
public:
    GolDuinoButtonReleasedResultSender(GolgiResultSender *golgiResultSender);
    void success(void);
    const char *getSender(void);
    virtual ~GolDuinoButtonReleasedResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoButtonReleasedRequestReceiver{
public:
    virtual void inboundButtonReleased(GolDuinoButtonReleasedResultSender *resultSender, GolDuino_buttonReleased_reqArg *arg) {};
};

class GolDuinoInternalButtonReleasedRequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalButtonReleasedRequestReceiver(GolDuinoButtonReleasedRequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalButtonReleasedRequestReceiver();
private:
    GolDuinoButtonReleasedRequestReceiver *reqReceiver;
};

void GolDuinoRegisterButtonReleasedRequestReceiver(GolDuinoButtonReleasedRequestReceiver *requestReceiver);

#endif
class GolDuinoButtonReleasedResultReceiver{
public:
    virtual void success(void) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoButtonReleasedResultReceiver() {};
};

extern void GolDuinoButtonReleased_sendTo(GolDuinoButtonReleasedResultReceiver *resReceiver, const char *dst, GolDuino_buttonReleased_reqArg *arg);
#if 1
class GolDuinoSetPotValueResultSender{
private:
    void sendResult(GolDuino_setPotValue_rspArg *rspArg);
public:
    GolDuinoSetPotValueResultSender(GolgiResultSender *golgiResultSender);
    void success(void);
    const char *getSender(void);
    virtual ~GolDuinoSetPotValueResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoSetPotValueRequestReceiver{
public:
    virtual void inboundSetPotValue(GolDuinoSetPotValueResultSender *resultSender, GolDuino_setPotValue_reqArg *arg) {};
};

class GolDuinoInternalSetPotValueRequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalSetPotValueRequestReceiver(GolDuinoSetPotValueRequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalSetPotValueRequestReceiver();
private:
    GolDuinoSetPotValueRequestReceiver *reqReceiver;
};

void GolDuinoRegisterSetPotValueRequestReceiver(GolDuinoSetPotValueRequestReceiver *requestReceiver);

#endif
class GolDuinoSetPotValueResultReceiver{
public:
    virtual void success(void) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoSetPotValueResultReceiver() {};
};

extern void GolDuinoSetPotValue_sendTo(GolDuinoSetPotValueResultReceiver *resReceiver, const char *dst, GolDuino_setPotValue_reqArg *arg);
#if 1
class GolDuinoGetPotValueResultSender{
private:
    void sendResult(GolDuino_getPotValue_rspArg *rspArg);
public:
    GolDuinoGetPotValueResultSender(GolgiResultSender *golgiResultSender);
    void success(PotValue *arg);
    void failWithGolgiException(GolgiException *golgiException);
    const char *getSender(void);
    virtual ~GolDuinoGetPotValueResultSender();
private:
    GolgiResultSender *golgiResultSender;
};

class GolDuinoGetPotValueRequestReceiver{
public:
    virtual void inboundGetPotValue(GolDuinoGetPotValueResultSender *resultSender, GolDuino_getPotValue_reqArg *arg) {};
};

class GolDuinoInternalGetPotValueRequestReceiver: public GolgiRequestReceiver{
public:
    GolDuinoInternalGetPotValueRequestReceiver(GolDuinoGetPotValueRequestReceiver *reqReceiver);
    void inboundRequest(GolgiResultSender *resultSender, const char *payload);
    virtual ~GolDuinoInternalGetPotValueRequestReceiver();
private:
    GolDuinoGetPotValueRequestReceiver *reqReceiver;
};

void GolDuinoRegisterGetPotValueRequestReceiver(GolDuinoGetPotValueRequestReceiver *requestReceiver);

#endif
    void failWithGolgiException(GolgiException *golgiException);
class GolDuinoGetPotValueResultReceiver{
public:
    virtual void success(PotValue *arg) {};
    virtual void errorWithGolgiException(GolgiException *golgiException) {};
    virtual ~GolDuinoGetPotValueResultReceiver() {};
};

extern void GolDuinoGetPotValue_sendTo(GolDuinoGetPotValueResultReceiver *resReceiver, const char *dst, GolDuino_getPotValue_reqArg *arg);
#endif
